# Puerto para el servicio Batch
server.port=8081

spring.datasource.url=jdbc:mysql://localhost:3306/mi_microservicio_db?createDatabaseIfNotExist=true&serverTimezone=UTC

# Usuario y contraseña de tu base de datos MySQL.
# El usuario por defecto suele ser 'root'. ¡Usa el tuyo!
spring.datasource.username=root
spring.datasource.password=Jhanmarcogodoy.21

# Driver de MySQL (Aunque Spring Boot 3 lo detecta solo a partir de la URL, es buena práctica ponerlo)
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# 'update': Hibernate intentará actualizar el esquema de la BD para que coincida con tus entidades.
# Ideal para desarrollo. No usar en producción.
spring.jpa.hibernate.ddl-auto=update

# Muestra en la consola las sentencias SQL que Hibernate ejecuta. Muy útil para depurar.
spring.jpa.show-sql=true

# Formatea el SQL en la consola para que sea más legible.
spring.jpa.properties.hibernate.format_sql=true

# 'always': Crea las tablas de metadatos de Spring Batch (BATCH_JOB_INSTANCE, etc.) al arrancar.
# Usa 'always' la primera vez. Luego puedes cambiarlo a 'embedded' o 'never' si lo gestionas manualmente.
spring.batch.jdbc.initialize-schema=always

# 'false': Evita que todos los jobs se ejecuten automáticamente al iniciar la aplicación.
# Es la mejor práctica, ya que querrás lanzar los jobs bajo demanda (ej. con un endpoint).
spring.batch.job.enabled=false